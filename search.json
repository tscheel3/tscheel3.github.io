[
  {
    "objectID": "posts/kansas-city-pass-catchers/index.html",
    "href": "posts/kansas-city-pass-catchers/index.html",
    "title": "Kansas City Pass Catchers: Underrated or Underhated?",
    "section": "",
    "text": "With 5 Straight AFC Championship game appearances and 2 Super Bowl wins since 2018, Chiefs fans have to get creative when finding something to complain about. Over the years it’s been the offensive line, the defense, the run game to name a few. This season, most fans believe the pass catchers, especially the receivers, are holding the team back. The eye test is one thing, but stats are another.\nAre the Chiefs pass catchers actually as bad as people think?\nI’ll first show some of the things they do well, then their biggest flaw. To start, let’s look at the basic, but pretty telling, stat that is yards per game. Good passing offenses get the most passing yards, it’s that simple.\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(ggalt)\nlibrary(ggtext)\nlibrary(gt)\n\nNGSplayer &lt;- read_csv(\"NGSv2.csv\")\nTeamAdv23 &lt;- read_csv(\"TmAdvRec23v2.csv\")\n\nTopRecOffenses &lt;- TeamAdv23 |&gt; \n  mutate(YPG = Yds/G) |&gt; \n  summarise(Tm, YPG) |&gt; \n  arrange(desc(YPG)) |&gt; \n  top_n(10)\n\nChiefsYPG &lt;- TeamAdv23 |&gt; \n  mutate(YPG = Yds/G) |&gt; \n  summarise(Tm, YPG) |&gt; \n  filter(Tm == \"Kansas City Chiefs\")\n\nPlayerYAC &lt;- NGSplayer |&gt; \n  summarise(\n    PLAYER, \n    YACpr,\n    xYACpr,\n    YACoverExp = YACpr - xYACpr) |&gt; \n  arrange(desc(xYACpr)) |&gt; \n  top_n(20,xYACpr)\n\nChiefsYAC &lt;- NGSplayer |&gt; \n  summarise(\n    PLAYER, \n    YACpr,\n    xYACpr,\n    YACoverExp = YACpr - xYACpr) |&gt; \n  arrange(desc(xYACpr)) |&gt; \n  top_n(20,xYACpr) |&gt; \n  filter(PLAYER == \"Rashee Rice\" | PLAYER == \"Marquez Valdes-Scantling\" | PLAYER == \"Kadarius Toney\" | PLAYER == \"Skyy Moore\" | PLAYER == \"Travis Kelce\")\n\nDropsTCR &lt;- TeamAdv23 |&gt; \n  summarise(\n    Tm, Drop, TrueCatchRate = Rec/OnTgt) |&gt;\n  arrange(desc(Drop)) |&gt; \n  top_n(10,Drop)\n\nggplot() +\n  geom_bar(\n    data=TopRecOffenses,\n    aes(x=reorder(Tm, YPG), weight=YPG), fill=\"grey\") + \n  geom_bar(\n    data=ChiefsYPG,\n    aes(x=reorder(Tm, YPG), weight=YPG), fill=\"#E31837\") + coord_flip() +\n  labs(\n    x=\"\",\n    y=\"Receiving Yards Per Game\",\n    title=\"The Chiefs are Near the Top in Receiving Yards Per Game\", \n    subtitle = \"Kansas City is 4th in the NFL through week 9, averaging about 275 receiving YPG\",\n    caption=\"Source: Sports Reference | By: Tyler Scheel\"\n  ) + \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 10),\n    axis.title = element_text(size = 9),\n    axis.title.y = element_blank(),\n    axis.text = element_text(size = 8),\n    axis.ticks = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    plot.title.position = \"plot\",\n    legend.position=\"bottom\"\n  )\n\n\n\n\n\nThe stat is useful, but it includes many factors besides the ability of the pass catchers, such as offensive play calling and quarterback play. However, being top five in yards isn’t something we can just ignore.\nWhat stats can we look at that focus more on the ability of the receiver?\nYards after the catch give a much better idea of how effective the player is regardless of quarterback play. NFL Next Gen Stats has a very intriguing statistic called expected yards after catch, which is “based on numerous factors using tracking data such as how open the receiver is, how fast they’re traveling, how many defenders/blockers are in space, etc.” The data is filtered to only receivers and tight ends with at least 25 targets.\n\n\nCode\nggplot() + \n  geom_dumbbell(\n    data=PlayerYAC, \n    aes(y=reorder(PLAYER, xYACpr), x=YACpr, xend=xYACpr),\n    size = 2,\n    colour = \"lightgrey\",\n    colour_x = \"darkgrey\",\n    colour_xend = \"black\") +\n  geom_dumbbell(\n    data=ChiefsYAC, \n    aes(y=reorder(PLAYER, xYACpr), x=YACpr, xend=xYACpr),\n    size = 2,\n    colour = \"grey\",\n    colour_x = \"#FFB81C\",\n    colour_xend = \"#E31837\") +\n  labs(\n    x=\"Yards After Catch/Reception\",\n    y=\"\",\n    title=\"The Chiefs Top Pass Catchers Excell at Expected YAC\", \n    subtitle = \"Five Kansas City players rank in the top 20 in expected YAC per reception (red), but aren't quite as \\n dominant in actual YAC (gold)\",\n    caption=\"Source: NFL Next Gen Stats | By: Tyler Scheel\"\n  ) + \n  theme_minimal() +\n   theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 10),\n    axis.title = element_text(size = 9),\n    axis.text = element_text(size = 8),\n    plot.title.position = \"plot\"\n    ) \n\n\n\n\n\nKansas City has the highest expected YAC per reception in the NFL by far. However, they are third in actual YAC. That tells us that even though the Chiefs are great after the catch, they could be even better.\nSo when Kansas City playmakers get the ball in their hands, they are statistically very effective. But catching the ball has been an issue for the Chiefs all season. This table shows the 10 teams with the most drops through week 9 as well as their true catch percentage. True catch percentage is essentially what percentage of on-target throws are caught. Kansas City ranks 27th in true catch percentage.\n\n\nCode\nDropsTCR |&gt; \n  gt() |&gt; \n  cols_label(\n    Tm = \"Team\",\n    Drop = \"Drops\",\n    TrueCatchRate = \"True Catch Rate\"\n  ) |&gt;\n  tab_header(\n    title = \"Kansas City Simply Struggles to Catch\",\n    subtitle = \"The Chiefs lead the NFL in dropped passes, nearly doubling the league average\"\n  ) |&gt; tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) |&gt; tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) |&gt;\n  tab_source_note(\n    source_note = md(\"**By:** Tyler Scheel  |  **Source:** Sports Reference\")\n  ) |&gt;\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=16)\n     )\n   ) |&gt;\n  opt_row_striping() |&gt; \n  opt_table_lines(\"none\") |&gt;\n    fmt_percent(\n    columns = c(TrueCatchRate),\n    decimals = 1\n  ) |&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"#E31837\"),\n      cell_text(color = \"#FFB81C\")\n      ),\n    locations = cells_body(\n      rows = Tm == \"Kansas City Chiefs\")\n  )\n\n\n\n\n\n\n  \n    \n      Kansas City Simply Struggles to Catch\n    \n    \n      The Chiefs lead the NFL in dropped passes, nearly doubling the league average\n    \n    \n      Team\n      Drops\n      True Catch Rate\n    \n  \n  \n    Kansas City Chiefs\n25\n86.9%\n    Los Angeles Rams\n21\n83.6%\n    Detroit Lions\n19\n87.7%\n    Cincinnati Bengals\n18\n91.2%\n    Dallas Cowboys\n18\n84.6%\n    Minnesota Vikings\n17\n85.6%\n    Cleveland Browns\n15\n90.0%\n    Indianapolis Colts\n15\n88.6%\n    Green Bay Packers\n15\n82.1%\n    Washington Commanders\n15\n91.4%\n  \n  \n    \n      By: Tyler Scheel  |  Source: Sports Reference\n    \n  \n  \n\n\n\n\nIn conclusion, the Chiefs pass catchers are above average in every category that isn’t about actually catching the ball. With a young, inexperienced group of skill players, it isn’t particularly surprising to see them dropping passes. Even with these issues, their ability to get separation and work for yards after the catch gives the group immense upside moving forward.\nAll in all, if the worst thing Kansas City fans have to whine about are these surprisingly productive receivers and tight ends, they could be well on their way to another world title."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Latest Posts",
    "section": "",
    "text": "Kansas City Pass Catchers: Underrated or Underhated?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNov 12, 2023\n\n\nTyler Scheel\n\n\n\n\n\n\n  \n\n\n\n\nIntroduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOct 31, 2023\n\n\nTyler Scheel\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Tyler Scheel. I am a Junior Sports Media and Communications major at the UNL CoJMC. I love all things sports. I’ve always been fascinated by sports statistics and how they can prove or disprove fans wild takes."
  },
  {
    "objectID": "DataChartTrials.html",
    "href": "DataChartTrials.html",
    "title": "Tyler Scheel's Sports Data Blog",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggrepel)\nlibrary(ggalt)\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\nlibrary(ggtext)\nlibrary(gt)\n\nUsing Sports Reference and AWS Next Gen Stats.\n\nNGSplayer &lt;- read_csv(\"NGSv2.csv\")\n\nRows: 124 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): PLAYER, TEAM, POS\ndbl (12): CUSH, SEP, TAY, TAYpct, REC, TAR, CTCHpct, YDS, TD, YACpr, xYACpr,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nTeamAdv23 &lt;- read_csv(\"TmAdvRec23v2.csv\")\n\nRows: 32 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (16): G, Tgt, OnTgt, Rec, Yds, TD, 1D, YBC, YBCpr, YAC, YACpr, ADOT, Brk...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nFirst I will show what the Chiefs do well.\nChart 1: Receiving Yards Per Game (data from Sports Reference)\n\nTopRecOffenses &lt;- TeamAdv23 |&gt; mutate(YPG = Yds/G) |&gt; summarise(Tm, YPG) |&gt; arrange(desc(YPG)) |&gt; top_n(10)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\nSelecting by YPG\n\nChiefsYPG &lt;- TeamAdv23 |&gt; mutate(YPG = Yds/G) |&gt; summarise(Tm, YPG) |&gt; filter(Tm == \"Kansas City Chiefs\")\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n\nggplot() +\n  geom_bar(\n    data=TopRecOffenses,\n    aes(x=reorder(Tm, YPG), weight=YPG), fill=\"grey\") + \n  geom_bar(\n    data=ChiefsYPG,\n    aes(x=reorder(Tm, YPG), weight=YPG), fill=\"#E31837\") + coord_flip() +\n  labs(\n    x=\"\",\n    y=\"Recieving Yards Per Game\",\n    title=\"Chiefs Near the Top in Receiving Yards Per Game\", \n    subtitle = \"Kansas City is 4th in the NFL through week 9\",\n    caption=\"Source: Sports Reference | By: Tyler Scheel\"\n  ) + \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.title.y = element_blank(),\n    axis.text = element_text(size = 8),\n    axis.ticks = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    legend.position=\"bottom\"\n  )\n\n\n\n\nChart 2: YAC, xYAC. I don’t know if I should use Player or Team data yet.\nThe next two code blocks are to show PLAYER YAC/Expected numbers.\n\nPlayerYAC &lt;- NGSplayer |&gt; \n  summarise(\n    PLAYER, YACpr,\n    xYACpr,\n    YACoverExp = YACpr - xYACpr) |&gt; arrange(desc(xYACpr)) |&gt; top_n(20,xYACpr)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n\nChiefsYAC &lt;- NGSplayer |&gt; \n  summarise(\n    PLAYER, YACpr,\n    xYACpr,\n    YACoverExp = YACpr - xYACpr) |&gt; arrange(desc(xYACpr)) |&gt; top_n(20,xYACpr) |&gt; filter(PLAYER == \"Rashee Rice\" | PLAYER == \"Marquez Valdes-Scantling\" | PLAYER == \"Kadarius Toney\" | PLAYER == \"Skyy Moore\" | PLAYER == \"Travis Kelce\")\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n^^ Here I was trying to create a dataframe with only Cheifs players so I could highlight them in the dumbbell chart. I still haven’t figured out how to do that.\n\nggplot() + \n  geom_dumbbell(\n    data=PlayerYAC, \n    aes(y=reorder(PLAYER, xYACpr), x=YACpr, xend=xYACpr),\n    size = 2,\n    colour = \"lightgrey\",\n    colour_x = \"darkgrey\",\n    colour_xend = \"black\") +\n  geom_dumbbell(\n    data=ChiefsYAC, \n    aes(y=reorder(PLAYER, xYACpr), x=YACpr, xend=xYACpr),\n    size = 2,\n    colour = \"grey\",\n    colour_x = \"#FFB81C\",\n    colour_xend = \"#E31837\") +\n  labs(\n    x=\"Yards After Catch/Reception\",\n    y=\"\",\n    title=\"The Chiefs Top Pass Catchers Excell at Expected YAC\", \n    subtitle = \"5 Kansas City players rank in the top 20 in expected YAC per reception (red), \\n but aren't as dominant in actual YAC (gold)\",\n    caption=\"Source: NFL Next Gen Stats | By: Tyler Scheel\"\n  ) + \n  theme_minimal() +\n   theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.text = element_text(size = 8)\n    ) \n\nWarning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n\n\n\n\n\nNow I will do TEAM YAC numbers.\n\nTopTeamYAC &lt;- NGSplayer |&gt; group_by(TEAM) |&gt;\n  summarise(\n    YACPR = mean(YACpr),\n    xYACPR = mean(xYACpr),\n    YACoverExp = mean(YACpr - xYACpr)) |&gt; arrange(desc(YACPR)) |&gt; top_n(16,YACPR)\n\n\nggplot() + \n  geom_dumbbell(\n    data=TopTeamYAC, \n    aes(y=reorder(TEAM, YACPR), x=YACPR, xend=xYACPR),\n    size = 2,\n    colour = \"grey\",\n    colour_x = \"green\",\n    colour_xend = \"red\") +\n  labs(\n    title=\"Chiefs\", \n    subtitle = \"\"\n  ) + \n  theme(\n    plot.subtitle = element_textbox_simple()\n  )\n\n\n\n\nChart 3: Seperation\n\nNGSplayer |&gt; group_by(TEAM) |&gt;\n  summarise(\n    AvgSEP = mean(SEP)) |&gt; arrange(desc(AvgSEP))\n\n# A tibble: 32 × 2\n   TEAM  AvgSEP\n   &lt;chr&gt;  &lt;dbl&gt;\n 1 KC      3.56\n 2 CHI     3.47\n 3 BUF     3.38\n 4 CLE     3.37\n 5 DET     3.3 \n 6 NYG     3.3 \n 7 ARI     3.28\n 8 GB      3.24\n 9 SF      3.23\n10 WAS     3.22\n# ℹ 22 more rows\n\n\nMore Stuff I should maybe use:\n\nTeamAdv23 |&gt; mutate(\n  TrueCatchRate = Rec/OnTgt) |&gt; arrange(TrueCatchRate)\n\n# A tibble: 32 × 18\n   Tm        G   Tgt OnTgt   Rec   Yds    TD  `1D`   YBC YBCpr   YAC YACpr  ADOT\n   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Gree…     8   261   190   156  1734    12    86   912   5.8   822   5.3   9  \n 2 Los …     9   316   220   184  2242     8   104  1321   7.2   921   5     8.1\n 3 Dall…     8   273   227   192  2042    13   102  1088   5.7   954   5     7.5\n 4 Minn…     9   351   285   244  2590    20   126  1468   6    1122   4.6   6.8\n 5 Pitt…     8   262   184   159  1646     7    70   791   5     855   5.4   7.3\n 6 Kans…     9   340   267   232  2473    17   120  1060   4.6  1413   6.1   6.6\n 7 Jack…     8   275   216   189  1956     9    90  1049   5.6   907   4.8   6.9\n 8 Detr…     8   293   228   200  2174    12   107  1182   5.9   992   5     6.5\n 9 Tamp…     8   277   203   179  1865    12    87   968   5.4   897   5     7.9\n10 New …     9   322   231   204  1940    10    89   920   4.5  1020   5     7.2\n# ℹ 22 more rows\n# ℹ 5 more variables: BrkTkl &lt;dbl&gt;, RecpBRT &lt;dbl&gt;, Drop &lt;dbl&gt;, DropPCT &lt;dbl&gt;,\n#   TrueCatchRate &lt;dbl&gt;\n\n\n\nMostDrops &lt;- TeamAdv23 |&gt; \n  summarise(\n    Tm, Drop) |&gt;\n  arrange(desc(Drop)) |&gt; top_n(10,Drop)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n\ntable1 &lt;- MostDrops |&gt; \n  gt() |&gt; \n  cols_label(\n    Tm = \"Team\",\n    Drop = \"Drops\"\n  ) |&gt;\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=14)\n     )\n   ) |&gt;\n  opt_row_striping() |&gt; \n  opt_table_lines(\"none\") |&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"#E31837\"),\n      cell_text(color = \"#FFB81C\")\n      ),\n    locations = cells_body(\n      rows = Tm == \"Kansas City Chiefs\")\n  )\n\nThis is an experement:\n\nWorstTCR &lt;- TeamAdv23 |&gt; \n  summarise(\n    TrueCatchRate = Rec/OnTgt, Tm) |&gt;\n  arrange(TrueCatchRate) |&gt; top_n(10,-TrueCatchRate)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n\ntable2 &lt;- WorstTCR |&gt; \n  gt() |&gt; \n  cols_label(\n    Tm = \"Team\",\n    TrueCatchRate = \"True Catch Rate\"\n  ) |&gt;\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=14)\n     )\n   ) |&gt;\n  opt_row_striping() |&gt; \n  opt_table_lines(\"none\") |&gt;\n    fmt_percent(\n    columns = c(TrueCatchRate),\n    decimals = 1\n  ) |&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"#E31837\"),\n      cell_text(color = \"#FFB81C\")\n      ),\n    locations = cells_body(\n      rows = Tm == \"Kansas City Chiefs\"))\n\nTHIS IS THE GOOD COMPLETE VERSION OF THE TABLE, DO NOT EDIT:\n\nDropsTCR &lt;- TeamAdv23 |&gt; \n  summarise(\n    Tm, Drop, TrueCatchRate = Rec/OnTgt) |&gt;\n  arrange(desc(Drop)) |&gt; top_n(10,Drop)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n\nDropsTCR |&gt; \n  gt() |&gt; \n  cols_label(\n    Tm = \"Team\",\n    Drop = \"Drops\"\n  ) |&gt;\n  tab_header(\n    title = \"Kansas City Struggles to Catch\",\n    subtitle = \"The Chiefs lead the NFL in dropped passes, nearly doubling the league average\"\n  ) |&gt; tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) |&gt; tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) |&gt;\n  tab_source_note(\n    source_note = md(\"**By:** Tyler Scheel  |  **Source:** Sports Reference\")\n  ) |&gt;\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=15)\n     )\n   ) |&gt;\n  opt_row_striping() |&gt; \n  opt_table_lines(\"none\") |&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"#E31837\"),\n      cell_text(color = \"#FFB81C\")\n      ),\n    locations = cells_body(\n      rows = Tm == \"Kansas City Chiefs\")\n  )\n\n\n\n\n\n  \n    \n      Kansas City Struggles to Catch\n    \n    \n      The Chiefs lead the NFL in dropped passes, nearly doubling the league average\n    \n    \n      Team\n      Drops\n      TrueCatchRate\n    \n  \n  \n    Kansas City Chiefs\n25\n0.8689139\n    Los Angeles Rams\n21\n0.8363636\n    Detroit Lions\n19\n0.8771930\n    Cincinnati Bengals\n18\n0.9115044\n    Dallas Cowboys\n18\n0.8458150\n    Minnesota Vikings\n17\n0.8561404\n    Cleveland Browns\n15\n0.9000000\n    Indianapolis Colts\n15\n0.8863636\n    Green Bay Packers\n15\n0.8210526\n    Washington Commanders\n15\n0.9143969\n  \n  \n    \n      By: Tyler Scheel  |  Source: Sports Reference"
  },
  {
    "objectID": "posts/introduction/index.html",
    "href": "posts/introduction/index.html",
    "title": "Introduction",
    "section": "",
    "text": "My name is Tyler Scheel. I am a Junior Sports Media and Communications major at the UNL CoJMC. I love all things sports. I’ve always been fascinated by sports statistics and how they can prove or disprove fans wild takes."
  }
]